schema {
  query: RootQuery
}

"""
Direct the client to resolve this field locally, either from the cache or local resolvers.
"""
directive @client(
  """
  When true, the client will never use the cache for this value. See
  https://www.apollographql.com/docs/react/essentials/local-state/#forcing-resolvers-with-clientalways-true
  """
  always: Boolean
) on FIELD | FRAGMENT_DEFINITION | INLINE_FRAGMENT

"""
Export this locally resolved field as a variable to be used in the remainder of this query. See
https://www.apollographql.com/docs/react/essentials/local-state/#using-client-fields-as-variables
"""
directive @export(
  """The variable name to export this field as."""
  as: String!
) on FIELD

"""
Specify a custom store key for this result. See
https://www.apollographql.com/docs/react/advanced/caching/#the-connection-directive
"""
directive @connection(
  """Specify the store key."""
  key: String!

  """
  An array of query argument names to include in the generated custom store key.
  """
  filter: [String!]
) on FIELD

type AnchorBorrowerDistributionAPYs {
  ANCEmissionRate: String
  ANCPrice: String
  DistributionAPY: String
  Height: Int
  Timestamp: Int
  TotalLiabilities: String
}

type AnchorDepositRateHistory {
  DepositRate: String
  Height: Int
  Timestamp: Int
  Updated: Boolean
}

type AnchorExchangeRates {
  ATerraContract: String
  ExchangeRate: String
  Height: Int
  StableDenom: String
  Timestamp: Int
}

type AnchorGovRewardRecords {
  CurrentAPY: String
  GovShareIndex: String
  Height: Int
  Timestamp: Int
}

type AnchorLPRewards {
  APY: String
  Height: Int
  Timestamp: Int
}

type Blocks {
  Header: BlocksHeader
  Height: Int
  Txs: [BlocksTxs]
}

type BlocksHeader {
  AppHash: [Int]
  ChainID: String
  ConsensusHash: [Int]
  DataHash: [Int]
  EvidenceHash: [Int]
  Height: Int
  LastBlockID: BlocksHeaderLastBlockID
  LastCommitHash: [Int]
  LastResultsHash: [Int]
  NextValidatorsHash: [Int]
  ProposerAddress: [Int]
  Time: Time
  ValidatorsHash: [Int]
  Version: BlocksHeaderVersion
}

type BlocksHeaderLastBlockID {
  Hash: [Int]
  PartsHeader: BlocksHeaderLastBlockIDPartsHeader
}

type BlocksHeaderLastBlockIDPartsHeader {
  Hash: [Int]
  Total: Int
}

type BlocksHeaderVersion {
  App: Int
  Block: Int
}

type BlockState {
  Block: BlockStateBlock
  Height: Int
  ResponseBeginBlock: BlockStateResponseBeginBlock
  ResponseDeliverTx: [BlockStateResponseDeliverTx]
  ResponseEndBlock: BlockStateResponseEndBlock
}

type BlockStateBlock {
  Data: BlockStateBlockData
  Header: BlockStateBlockHeader
}

type BlockStateBlockData {
  Txs: [[Int]]
  hash: [Int]
}

type BlockStateBlockHeader {
  AppHash: [Int]
  ChainID: String
  ConsensusHash: [Int]
  DataHash: [Int]
  EvidenceHash: [Int]
  Height: Int
  LastBlockID: BlockStateBlockHeaderLastBlockID
  LastCommitHash: [Int]
  LastResultsHash: [Int]
  NextValidatorsHash: [Int]
  ProposerAddress: [Int]
  Time: Time
  ValidatorsHash: [Int]
  Version: BlockStateBlockHeaderVersion
}

type BlockStateBlockHeaderLastBlockID {
  Hash: [Int]
  PartsHeader: BlockStateBlockHeaderLastBlockIDPartsHeader
}

type BlockStateBlockHeaderLastBlockIDPartsHeader {
  Hash: [Int]
  Total: Int
}

type BlockStateBlockHeaderVersion {
  App: Int
  Block: Int
}

type BlockStateResponseBeginBlock {
  Events: [BlockStateResponseBeginBlockEvents]
}

type BlockStateResponseBeginBlockEvents {
  Attributes: [BlockStateResponseBeginBlockEventsAttributes]
  Type: String
}

type BlockStateResponseBeginBlockEventsAttributes {
  Key: String
  Value: String
}

type BlockStateResponseDeliverTx {
  Code: Int
  Codespace: String
  Data: String
  Events: [BlockStateResponseDeliverTxEvents]
  GasUsed: Int
  GasWanted: Int
  Info: String
  Log: String
}

type BlockStateResponseDeliverTxEvents {
  Attributes: [BlockStateResponseDeliverTxEventsAttributes]
  Type: String
}

type BlockStateResponseDeliverTxEventsAttributes {
  Key: String
  Value: String
}

type BlockStateResponseEndBlock {
  ConsensusParamUpdates: BlockStateResponseEndBlockConsensusParamUpdates
  Events: [BlockStateResponseEndBlockEvents]
  ValidatorUpdates: [BlockStateResponseEndBlockValidatorUpdates]
}

type BlockStateResponseEndBlockConsensusParamUpdates {
  Block: BlockStateResponseEndBlockConsensusParamUpdatesBlock
  Evidence: BlockStateResponseEndBlockConsensusParamUpdatesEvidence
  Validator: BlockStateResponseEndBlockConsensusParamUpdatesValidator
}

type BlockStateResponseEndBlockConsensusParamUpdatesBlock {
  MaxBytes: Int
  MaxGas: Int
}

type BlockStateResponseEndBlockConsensusParamUpdatesEvidence {
  MaxAgeDuration: Int
  MaxAgeNumBlocks: Int
}

type BlockStateResponseEndBlockConsensusParamUpdatesValidator {
  PubKeyTypes: [String]
}

type BlockStateResponseEndBlockEvents {
  Attributes: [BlockStateResponseEndBlockEventsAttributes]
  Type: String
}

type BlockStateResponseEndBlockEventsAttributes {
  Key: String
  Value: String
}

type BlockStateResponseEndBlockValidatorUpdates {
  Power: Int
  PubKey: BlockStateResponseEndBlockValidatorUpdatesPubKey
}

type BlockStateResponseEndBlockValidatorUpdatesPubKey {
  Data: String
  Type: String
}

type BlocksTxs {
  Code: Int
  Events: [BlocksTxsEvents]
  GasUsed: Int
  GasWanted: Int
  Height: Int
  Logs: [BlocksTxsLogs]
  RawLog: String
  Success: Boolean
  Timestamp: String
  TimestampUTC: Int
  Tx: BlocksTxsTx
  TxHash: String
}

type BlocksTxsEvents {
  Attributes: [BlocksTxsEventsAttributes]
  Type: String
}

type BlocksTxsEventsAttributes {
  Key: String
  Value: String
}

type BlocksTxsLogs {
  Events: [BlocksTxsLogsEvents]
  Log: String
  MsgIndex: Int
}

type BlocksTxsLogsEvents {
  Attributes: [BlocksTxsLogsEventsAttributes]
  Type: String
}

type BlocksTxsLogsEventsAttributes {
  Key: String
  Value: String
}

type BlocksTxsTx {
  Fee: BlocksTxsTxFee
  Memo: String
  Msg: [BlocksTxsTxMsg]
  Signatures: [BlocksTxsTxSignatures]
}

type BlocksTxsTxFee {
  Amount: [BlocksTxsTxFeeAmount]
  Gas: Int
}

type BlocksTxsTxFeeAmount {
  Amount: String
  Denom: String
}

type BlocksTxsTxMsg {
  Type: String
  Value: String
}

type BlocksTxsTxSignatures {
  PubKey: BlocksTxsTxSignaturesPubKey
  Signature: String
}

type BlocksTxsTxSignaturesPubKey {
  Type: String
  Value: String
}

type CW20Transfers {
  Address: String
  Amount: String
  Contract: String
  Height: Int
  Recipient: String
  Sender: String
  TransferType: String
}

type GetAuthAccountsAddressPayload {
  Height: String
  Result: GetAuthAccountsAddressPayloadResult
}

type GetAuthAccountsAddressPayloadResult {
  Account: GetAuthAccountsAddressPayloadResultAccount
  LazyGradedVestingAccount: GetAuthAccountsAddressPayloadResultLazyGradedVestingAccount
}

type GetAuthAccountsAddressPayloadResultAccount {
  Type: String
  Value: GetAuthAccountsAddressPayloadResultAccountValue
}

type GetAuthAccountsAddressPayloadResultAccountValue {
  AccountNumber: String
  Address: String
  Coins: [GetAuthAccountsAddressPayloadResultAccountValueCoins]
  PublicKey: String
  Sequence: String
}

type GetAuthAccountsAddressPayloadResultAccountValueCoins {
  Amount: String
  Denom: String
}

type GetAuthAccountsAddressPayloadResultLazyGradedVestingAccount {
  Type: String
  Value: GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValue
}

type GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValue {
  BaseVestingAccount: GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValueBaseVestingAccount
  VestingSchedules: [GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValueVestingSchedules]
}

type GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValueBaseVestingAccount {
  BaseAccount: GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValueBaseVestingAccountBaseAccount
  DelegatedFree: [GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValueBaseVestingAccountDelegatedFree]
  DelegatedVesting: [GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValueBaseVestingAccountDelegatedVesting]
  EndTime: String
  OriginalVesting: [GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValueBaseVestingAccountOriginalVesting]
}

type GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValueBaseVestingAccountBaseAccount {
  AccountNumber: String
  Address: String
  Coins: [GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValueBaseVestingAccountBaseAccountCoins]
  PublicKey: String
  Sequence: String
}

type GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValueBaseVestingAccountBaseAccountCoins {
  Amount: String
  Denom: String
}

type GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValueBaseVestingAccountDelegatedFree {
  Amount: String
  Denom: String
}

type GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValueBaseVestingAccountDelegatedVesting {
  Amount: String
  Denom: String
}

type GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValueBaseVestingAccountOriginalVesting {
  Amount: String
  Denom: String
}

type GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValueVestingSchedules {
  Denom: String
  LazySchedules: [GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValueVestingSchedulesLazySchedules]
}

type GetAuthAccountsAddressPayloadResultLazyGradedVestingAccountValueVestingSchedulesLazySchedules {
  EndTime: String
  Ratio: String
  StartTime: String
}

type GetBankBalancesAddressPayload {
  Height: String
  Result: [GetBankBalancesAddressPayloadResult]
}

type GetBankBalancesAddressPayloadResult {
  Amount: String
  Denom: String
}

type GetBlocksHeightPayload {
  Block: GetBlocksHeightPayloadBlock
  BlockID: GetBlocksHeightPayloadBlockID
}

type GetBlocksHeightPayloadBlock {
  Data: GetBlocksHeightPayloadBlockData
  Evidence: String
  Header: GetBlocksHeightPayloadBlockHeader
  LastCommit: GetBlocksHeightPayloadBlockLastCommit
}

type GetBlocksHeightPayloadBlockData {
  Txs: [String]
}

type GetBlocksHeightPayloadBlockHeader {
  AppHash: String
  ChainID: String
  ConsensusHash: String
  DataHash: String
  EvidenceHash: String
  Height: String
  LastBlockID: GetBlocksHeightPayloadBlockHeaderLastBlockID
  LastCommitHash: String
  LastResultsHash: String
  NextValidatorsHash: String
  NumTxs: String
  ProposerAddress: String
  Time: String
  TotalTxs: String
  ValidatorsHash: String
  Version: GetBlocksHeightPayloadBlockHeaderVersion
}

type GetBlocksHeightPayloadBlockHeaderLastBlockID {
  Hash: String
  Parts: GetBlocksHeightPayloadBlockHeaderLastBlockIDParts
}

type GetBlocksHeightPayloadBlockHeaderLastBlockIDParts {
  Hash: String
  Total: String
}

type GetBlocksHeightPayloadBlockHeaderVersion {
  App: String
  Block: String
}

type GetBlocksHeightPayloadBlockID {
  Hash: String
  Parts: GetBlocksHeightPayloadBlockIDParts
}

type GetBlocksHeightPayloadBlockIDParts {
  Hash: String
  Total: String
}

type GetBlocksHeightPayloadBlockLastCommit {
  BlockID: GetBlocksHeightPayloadBlockLastCommitBlockID
  Precommits: [GetBlocksHeightPayloadBlockLastCommitPrecommits]
}

type GetBlocksHeightPayloadBlockLastCommitBlockID {
  Hash: String
  Parts: GetBlocksHeightPayloadBlockLastCommitBlockIDParts
}

type GetBlocksHeightPayloadBlockLastCommitBlockIDParts {
  Hash: String
  Total: String
}

type GetBlocksHeightPayloadBlockLastCommitPrecommits {
  BlockID: GetBlocksHeightPayloadBlockLastCommitPrecommitsBlockID
  Height: String
  Round: String
  Signature: String
  Timestamp: String
  Type: Float
  ValidatorAddress: String
  ValidatorIndex: String
}

type GetBlocksHeightPayloadBlockLastCommitPrecommitsBlockID {
  Hash: String
  Parts: GetBlocksHeightPayloadBlockLastCommitPrecommitsBlockIDParts
}

type GetBlocksHeightPayloadBlockLastCommitPrecommitsBlockIDParts {
  Hash: String
  Total: String
}

type GetBlocksLatestPayload {
  Block: GetBlocksLatestPayloadBlock
  BlockID: GetBlocksLatestPayloadBlockID
}

type GetBlocksLatestPayloadBlock {
  Data: GetBlocksLatestPayloadBlockData
  Evidence: String
  Header: GetBlocksLatestPayloadBlockHeader
  LastCommit: GetBlocksLatestPayloadBlockLastCommit
}

type GetBlocksLatestPayloadBlockData {
  Txs: [String]
}

type GetBlocksLatestPayloadBlockHeader {
  AppHash: String
  ChainID: String
  ConsensusHash: String
  DataHash: String
  EvidenceHash: String
  Height: String
  LastBlockID: GetBlocksLatestPayloadBlockHeaderLastBlockID
  LastCommitHash: String
  LastResultsHash: String
  NextValidatorsHash: String
  NumTxs: String
  ProposerAddress: String
  Time: String
  TotalTxs: String
  ValidatorsHash: String
  Version: GetBlocksLatestPayloadBlockHeaderVersion
}

type GetBlocksLatestPayloadBlockHeaderLastBlockID {
  Hash: String
  Parts: GetBlocksLatestPayloadBlockHeaderLastBlockIDParts
}

type GetBlocksLatestPayloadBlockHeaderLastBlockIDParts {
  Hash: String
  Total: String
}

type GetBlocksLatestPayloadBlockHeaderVersion {
  App: String
  Block: String
}

type GetBlocksLatestPayloadBlockID {
  Hash: String
  Parts: GetBlocksLatestPayloadBlockIDParts
}

type GetBlocksLatestPayloadBlockIDParts {
  Hash: String
  Total: String
}

type GetBlocksLatestPayloadBlockLastCommit {
  BlockID: GetBlocksLatestPayloadBlockLastCommitBlockID
  Precommits: [GetBlocksLatestPayloadBlockLastCommitPrecommits]
}

type GetBlocksLatestPayloadBlockLastCommitBlockID {
  Hash: String
  Parts: GetBlocksLatestPayloadBlockLastCommitBlockIDParts
}

type GetBlocksLatestPayloadBlockLastCommitBlockIDParts {
  Hash: String
  Total: String
}

type GetBlocksLatestPayloadBlockLastCommitPrecommits {
  BlockID: GetBlocksLatestPayloadBlockLastCommitPrecommitsBlockID
  Height: String
  Round: String
  Signature: String
  Timestamp: String
  Type: Float
  ValidatorAddress: String
  ValidatorIndex: String
}

type GetBlocksLatestPayloadBlockLastCommitPrecommitsBlockID {
  Hash: String
  Parts: GetBlocksLatestPayloadBlockLastCommitPrecommitsBlockIDParts
}

type GetBlocksLatestPayloadBlockLastCommitPrecommitsBlockIDParts {
  Hash: String
  Total: String
}

type GetDistributionCommunityPoolPayload {
  Height: String
  Result: [GetDistributionCommunityPoolPayloadResult]
}

type GetDistributionCommunityPoolPayloadResult {
  Amount: String
  Denom: String
}

type GetDistributionDelegatorsDelegatorAddrRewardsPayload {
  Height: String
  Result: GetDistributionDelegatorsDelegatorAddrRewardsPayloadResult
}

type GetDistributionDelegatorsDelegatorAddrRewardsPayloadResult {
  Rewards: [GetDistributionDelegatorsDelegatorAddrRewardsPayloadResultRewards]
  Total: [GetDistributionDelegatorsDelegatorAddrRewardsPayloadResultTotal]
}

type GetDistributionDelegatorsDelegatorAddrRewardsPayloadResultRewards {
  Reward: [GetDistributionDelegatorsDelegatorAddrRewardsPayloadResultRewardsReward]
  ValidatorAddress: String
}

type GetDistributionDelegatorsDelegatorAddrRewardsPayloadResultRewardsReward {
  Amount: String
  Denom: String
}

type GetDistributionDelegatorsDelegatorAddrRewardsPayloadResultTotal {
  Amount: String
  Denom: String
}

type GetDistributionDelegatorsDelegatorAddrRewardsValidatorAddrPayload {
  Height: String
  Result: [GetDistributionDelegatorsDelegatorAddrRewardsValidatorAddrPayloadResult]
}

type GetDistributionDelegatorsDelegatorAddrRewardsValidatorAddrPayloadResult {
  Amount: String
  Denom: String
}

type GetDistributionDelegatorsDelegatorAddrWithdrawAddressPayload {
  Height: String
  Result: String
}

type GetDistributionParametersPayload {
  Height: String
  Result: GetDistributionParametersPayloadResult
}

type GetDistributionParametersPayloadResult {
  BaseProposerReward: String
  BonusProposerReward: String
  CommunityTax: String
}

type GetDistributionValidatorsValidatorAddrOutstandingRewardsPayload {
  Height: String
  Result: [GetDistributionValidatorsValidatorAddrOutstandingRewardsPayloadResult]
}

type GetDistributionValidatorsValidatorAddrOutstandingRewardsPayloadResult {
  Amount: String
  Denom: String
}

type GetDistributionValidatorsValidatorAddrPayload {
  Height: String
  Result: GetDistributionValidatorsValidatorAddrPayloadResult
}

type GetDistributionValidatorsValidatorAddrPayloadResult {
  OperatorAddress: String
  SelfBondRewards: [GetDistributionValidatorsValidatorAddrPayloadResultSelfBondRewards]
  ValCommission: [GetDistributionValidatorsValidatorAddrPayloadResultValCommission]
}

type GetDistributionValidatorsValidatorAddrPayloadResultSelfBondRewards {
  Amount: String
  Denom: String
}

type GetDistributionValidatorsValidatorAddrPayloadResultValCommission {
  Amount: String
  Denom: String
}

type GetDistributionValidatorsValidatorAddrRewardsPayload {
  Height: String
  Result: [GetDistributionValidatorsValidatorAddrRewardsPayloadResult]
}

type GetDistributionValidatorsValidatorAddrRewardsPayloadResult {
  Amount: String
  Denom: String
}

type GetGovParametersDepositPayload {
  Height: String
  Result: GetGovParametersDepositPayloadResult
}

type GetGovParametersDepositPayloadResult {
  MaxDepositPeriod: String
  MinDeposit: [GetGovParametersDepositPayloadResultMinDeposit]
}

type GetGovParametersDepositPayloadResultMinDeposit {
  Amount: String
  Denom: String
}

type GetGovParametersTallyingPayload {
  Height: String
  Result: GetGovParametersTallyingPayloadResult
}

type GetGovParametersTallyingPayloadResult {
  Quorum: String
  Threshold: String
  Veto: String
}

type GetGovParametersVotingPayload {
  Height: String
  Result: GetGovParametersVotingPayloadResult
}

type GetGovParametersVotingPayloadResult {
  VotingPeriod: String
}

type GetGovProposalsPayload {
  Height: String
  Result: [GetGovProposalsPayloadResult]
}

type GetGovProposalsPayloadResult {
  Description: String
  FinalTallyResult: GetGovProposalsPayloadResultFinalTallyResult
  ProposalID: Int
  ProposalStatus: String
  ProposalType: String
  SubmitTime: String
  Title: String
  TotalDeposit: [GetGovProposalsPayloadResultTotalDeposit]
  VotingStartTime: String
}

type GetGovProposalsPayloadResultFinalTallyResult {
  Abstain: String
  No: String
  NoWithVeto: String
  Yes: String
}

type GetGovProposalsPayloadResultTotalDeposit {
  Amount: String
  Denom: String
}

type GetGovProposalsProposalIDDepositsDepositorPayload {
  Height: String
  Result: GetGovProposalsProposalIDDepositsDepositorPayloadResult
}

type GetGovProposalsProposalIDDepositsDepositorPayloadResult {
  Amount: [GetGovProposalsProposalIDDepositsDepositorPayloadResultAmount]
  Depositor: String
  ProposalID: String
}

type GetGovProposalsProposalIDDepositsDepositorPayloadResultAmount {
  Amount: String
  Denom: String
}

type GetGovProposalsProposalIDDepositsPayload {
  Height: String
  Result: [GetGovProposalsProposalIDDepositsPayloadResult]
}

type GetGovProposalsProposalIDDepositsPayloadResult {
  Amount: [GetGovProposalsProposalIDDepositsPayloadResultAmount]
  Depositor: String
  ProposalID: String
}

type GetGovProposalsProposalIDDepositsPayloadResultAmount {
  Amount: String
  Denom: String
}

type GetGovProposalsProposalIDPayload {
  Height: String
  Result: GetGovProposalsProposalIDPayloadResult
}

type GetGovProposalsProposalIDPayloadResult {
  Description: String
  FinalTallyResult: GetGovProposalsProposalIDPayloadResultFinalTallyResult
  ProposalID: Int
  ProposalStatus: String
  ProposalType: String
  SubmitTime: String
  Title: String
  TotalDeposit: [GetGovProposalsProposalIDPayloadResultTotalDeposit]
  VotingStartTime: String
}

type GetGovProposalsProposalIDPayloadResultFinalTallyResult {
  Abstain: String
  No: String
  NoWithVeto: String
  Yes: String
}

type GetGovProposalsProposalIDPayloadResultTotalDeposit {
  Amount: String
  Denom: String
}

type GetGovProposalsProposalIDProposerPayload {
  Height: String
  Result: GetGovProposalsProposalIDProposerPayloadResult
}

type GetGovProposalsProposalIDProposerPayloadResult {
  ProposalID: String
  Proposer: String
}

type GetGovProposalsProposalIDTallyPayload {
  Height: String
  Result: GetGovProposalsProposalIDTallyPayloadResult
}

type GetGovProposalsProposalIDTallyPayloadResult {
  Abstain: String
  No: String
  NoWithVeto: String
  Yes: String
}

type GetGovProposalsProposalIDVotesPayload {
  Height: String
  Result: [GetGovProposalsProposalIDVotesPayloadResult]
}

type GetGovProposalsProposalIDVotesPayloadResult {
  Option: String
  ProposalID: String
  Voter: String
}

type GetGovProposalsProposalIDVotesVoterPayload {
  Option: String
  ProposalID: String
  Voter: String
}

type GetMarketParametersPayload {
  Height: String
  Result: GetMarketParametersPayloadResult
}

type GetMarketParametersPayloadResult {
  DailyLunaDeltaLimit: Float
  MaxSwapSpread: Float
  MinSwapSpread: Float
}

type GetMarketSwapPayload {
  Height: String
  Result: GetMarketSwapPayloadResult
}

type GetMarketSwapPayloadResult {
  Amount: String
  Denom: String
}

type GetMarketTerraPoolDeltaPayload {
  Height: String
  Result: String
}

type GetMintingAnnualProvisionsPayload {
  Height: String
  Result: String
}

type GetMintingInflationPayload {
  Height: String
  Result: String
}

type GetMintingParametersPayload {
  Height: String
  Result: GetMintingParametersPayloadResult
}

type GetMintingParametersPayloadResult {
  BlocksPerYear: String
  GoalBonded: String
  InflationMax: String
  InflationMin: String
  InflationRateChange: String
  MintDenom: String
}

type GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypePayload {
  GenericGrantInfo: GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypePayloadGenericGrantInfo
  SendGrantInfo: GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypePayloadSendGrantInfo
}

type GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypePayloadGenericGrantInfo {
  Authorization: GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypePayloadGenericGrantInfoAuthorization
  Expiration: String
}

type GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypePayloadGenericGrantInfoAuthorization {
  Type: String
  Value: GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypePayloadGenericGrantInfoAuthorizationValue
}

type GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypePayloadGenericGrantInfoAuthorizationValue {
  MsgType: String
}

type GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypePayloadSendGrantInfo {
  Authorization: GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypePayloadSendGrantInfoAuthorization
  Expiration: String
}

type GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypePayloadSendGrantInfoAuthorization {
  Type: String
  Value: GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypePayloadSendGrantInfoAuthorizationValue
}

type GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypePayloadSendGrantInfoAuthorizationValue {
  SpendLimit: [GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypePayloadSendGrantInfoAuthorizationValueSpendLimit]
}

type GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypePayloadSendGrantInfoAuthorizationValueSpendLimit {
  Amount: String
  Denom: String
}

type GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsPayload {
  GenericGrantInfo: GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsPayloadGenericGrantInfo
  SendGrantInfo: GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsPayloadSendGrantInfo
}

type GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsPayloadGenericGrantInfo {
  Authorization: GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsPayloadGenericGrantInfoAuthorization
  Expiration: String
}

type GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsPayloadGenericGrantInfoAuthorization {
  Type: String
  Value: GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsPayloadGenericGrantInfoAuthorizationValue
}

type GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsPayloadGenericGrantInfoAuthorizationValue {
  MsgType: String
}

type GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsPayloadSendGrantInfo {
  Authorization: GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsPayloadSendGrantInfoAuthorization
  Expiration: String
}

type GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsPayloadSendGrantInfoAuthorization {
  Type: String
  Value: GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsPayloadSendGrantInfoAuthorizationValue
}

type GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsPayloadSendGrantInfoAuthorizationValue {
  SpendLimit: [GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsPayloadSendGrantInfoAuthorizationValueSpendLimit]
}

type GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsPayloadSendGrantInfoAuthorizationValueSpendLimit {
  Amount: String
  Denom: String
}

type GetNodeInfoPayload {
  ApplicationVersion: GetNodeInfoPayloadApplicationVersion
  NodeInfo: GetNodeInfoPayloadNodeInfo
}

type GetNodeInfoPayloadApplicationVersion {
  BuildTags: String
  ClientName: String
  Commit: String
  Go: String
  Name: String
  ServerName: String
  Version: String
}

type GetNodeInfoPayloadNodeInfo {
  Channels: String
  ID: String
  ListenAddr: String
  Moniker: String
  Network: String
  Other: GetNodeInfoPayloadNodeInfoOther
  ProtocolVersion: GetNodeInfoPayloadNodeInfoProtocolVersion
  Version: String
}

type GetNodeInfoPayloadNodeInfoOther {
  RPCAddress: String
  TxIndex: String
}

type GetNodeInfoPayloadNodeInfoProtocolVersion {
  App: String
  Block: String
  P2p: String
}

type GetOracleDenomsActivesPayload {
  Height: String
  Result: [String]
}

type GetOracleDenomsDenomExchangeRatePayload {
  Height: String
  Result: String
}

type GetOracleDenomsDenomPrevotesPayload {
  Height: String
  Result: [GetOracleDenomsDenomPrevotesPayloadResult]
}

type GetOracleDenomsDenomPrevotesPayloadResult {
  Denom: String
  Hash: String
  SubmitBlock: String
  Voter: String
}

type GetOracleDenomsDenomPrevotesValidatorPayload {
  Height: String
  Result: [GetOracleDenomsDenomPrevotesValidatorPayloadResult]
}

type GetOracleDenomsDenomPrevotesValidatorPayloadResult {
  Denom: String
  Hash: String
  SubmitBlock: String
  Voter: String
}

type GetOracleDenomsDenomVotesPayload {
  Height: String
  Result: [GetOracleDenomsDenomVotesPayloadResult]
}

type GetOracleDenomsDenomVotesPayloadResult {
  Denom: String
  ExchangeRate: String
  Voter: String
}

type GetOracleDenomsDenomVotesValidatorPayload {
  Height: String
  Result: [GetOracleDenomsDenomVotesValidatorPayloadResult]
}

type GetOracleDenomsDenomVotesValidatorPayloadResult {
  Denom: String
  ExchangeRate: String
  Voter: String
}

type GetOracleDenomsExchangeRatesPayload {
  Height: String
  Result: [GetOracleDenomsExchangeRatesPayloadResult]
}

type GetOracleDenomsExchangeRatesPayloadResult {
  Amount: String
  Denom: String
}

type GetOracleParametersPayload {
  Height: String
  Result: GetOracleParametersPayloadResult
}

type GetOracleParametersPayloadResult {
  MinValidPerWindow: String
  RewardBand: String
  RewardDistributionWindow: String
  SlashFraction: String
  SlashWindow: String
  VotePeriod: String
  VoteThreshold: String
  Whitelist: [GetOracleParametersPayloadResultWhitelist]
}

type GetOracleParametersPayloadResultWhitelist {
  Name: String
  TobinTax: String
}

type GetOracleVotersValidatorAggregatePrevotePayload {
  Height: String
  Result: GetOracleVotersValidatorAggregatePrevotePayloadResult
}

type GetOracleVotersValidatorAggregatePrevotePayloadResult {
  Hash: String
  SubmitBlock: Float
  Voter: String
}

type GetOracleVotersValidatorAggregateVotePayload {
  Height: String
  Result: GetOracleVotersValidatorAggregateVotePayloadResult
}

type GetOracleVotersValidatorAggregateVotePayloadResult {
  ExchangeRates: [GetOracleVotersValidatorAggregateVotePayloadResultExchangeRates]
  Voter: String
}

type GetOracleVotersValidatorAggregateVotePayloadResultExchangeRates {
  Amount: String
  Denom: String
}

type GetOracleVotersValidatorFeederPayload {
  Height: String
  Result: String
}

type GetOracleVotersValidatorMissPayload {
  Height: String
  Result: String
}

type GetOracleVotersValidatorPrevotesPayload {
  Height: String
  Result: [GetOracleVotersValidatorPrevotesPayloadResult]
}

type GetOracleVotersValidatorPrevotesPayloadResult {
  Denom: String
  Hash: String
  SubmitBlock: String
  Voter: String
}

type GetOracleVotersValidatorVotesPayload {
  Height: String
  Result: [GetOracleVotersValidatorVotesPayloadResult]
}

type GetOracleVotersValidatorVotesPayloadResult {
  Denom: String
  ExchangeRate: String
  Voter: String
}

type GetSlashingParametersPayload {
  Height: String
  Result: GetSlashingParametersPayloadResult
}

type GetSlashingParametersPayloadResult {
  DowntimeJailDuration: String
  MaxEvidenceAge: String
  MinSignedPerWindow: String
  SignedBlocksWindow: String
  SlashFractionDoubleSign: String
  SlashFractionDowntime: String
}

type GetSlashingSigningInfosPayload {
  Height: String
  Result: [GetSlashingSigningInfosPayloadResult]
}

type GetSlashingSigningInfosPayloadResult {
  Address: String
  IndexOffset: String
  JailedUntil: String
  MissedBlocksCounter: String
  StartHeight: String
  Tombstoned: Boolean
}

type GetSlashingValidatorsValidatorPubKeySigningInfoPayload {
  Height: String
  Result: GetSlashingValidatorsValidatorPubKeySigningInfoPayloadResult
}

type GetSlashingValidatorsValidatorPubKeySigningInfoPayloadResult {
  Address: String
  IndexOffset: String
  JailedUntil: String
  MissedBlocksCounter: String
  StartHeight: String
  Tombstoned: Boolean
}

type GetStakingDelegatorsDelegatorAddrDelegationsPayload {
  Height: String
  Result: [GetStakingDelegatorsDelegatorAddrDelegationsPayloadResult]
}

type GetStakingDelegatorsDelegatorAddrDelegationsPayloadResult {
  Balance: GetStakingDelegatorsDelegatorAddrDelegationsPayloadResultBalance
  DelegatorAddress: String
  Shares: String
  ValidatorAddress: String
}

type GetStakingDelegatorsDelegatorAddrDelegationsPayloadResultBalance {
  Amount: String
  Denom: String
}

type GetStakingDelegatorsDelegatorAddrDelegationsValidatorAddrPayload {
  Height: String
  Result: GetStakingDelegatorsDelegatorAddrDelegationsValidatorAddrPayloadResult
}

type GetStakingDelegatorsDelegatorAddrDelegationsValidatorAddrPayloadResult {
  Balance: GetStakingDelegatorsDelegatorAddrDelegationsValidatorAddrPayloadResultBalance
  DelegatorAddress: String
  Shares: String
  ValidatorAddress: String
}

type GetStakingDelegatorsDelegatorAddrDelegationsValidatorAddrPayloadResultBalance {
  Amount: String
  Denom: String
}

type GetStakingDelegatorsDelegatorAddrTxsPayload {
  Count: String
  Limit: String
  PageNumber: String
  PageTotal: String
  TotalCount: String
  Txs: [GetStakingDelegatorsDelegatorAddrTxsPayloadTxs]
}

type GetStakingDelegatorsDelegatorAddrTxsPayloadTxs {
  Events: [GetStakingDelegatorsDelegatorAddrTxsPayloadTxsEvents]
  GasUsed: String
  GasWanted: String
  Height: String
  Logs: [GetStakingDelegatorsDelegatorAddrTxsPayloadTxsLogs]
  RawLogs: String
  Timestamp: String
  Tx: GetStakingDelegatorsDelegatorAddrTxsPayloadTxsTx
  Txhash: String
}

type GetStakingDelegatorsDelegatorAddrTxsPayloadTxsEvents {
  Attributes: [GetStakingDelegatorsDelegatorAddrTxsPayloadTxsEventsAttributes]
  Type: String
}

type GetStakingDelegatorsDelegatorAddrTxsPayloadTxsEventsAttributes {
  Key: String
  Value: String
}

type GetStakingDelegatorsDelegatorAddrTxsPayloadTxsLogs {
  Events: [GetStakingDelegatorsDelegatorAddrTxsPayloadTxsLogsEvents]
  Log: String
  MsgIndex: Float
  Success: Boolean
}

type GetStakingDelegatorsDelegatorAddrTxsPayloadTxsLogsEvents {
  Attributes: [GetStakingDelegatorsDelegatorAddrTxsPayloadTxsLogsEventsAttributes]
  Type: String
}

type GetStakingDelegatorsDelegatorAddrTxsPayloadTxsLogsEventsAttributes {
  Key: String
  Value: String
}

type GetStakingDelegatorsDelegatorAddrTxsPayloadTxsTx {
  Type: String
  Value: GetStakingDelegatorsDelegatorAddrTxsPayloadTxsTxValue
}

type GetStakingDelegatorsDelegatorAddrTxsPayloadTxsTxValue {
  Fee: GetStakingDelegatorsDelegatorAddrTxsPayloadTxsTxValueFee
  Memo: String
  Msg: [GetStakingDelegatorsDelegatorAddrTxsPayloadTxsTxValueMsg]
  Signatures: [GetStakingDelegatorsDelegatorAddrTxsPayloadTxsTxValueSignatures]
}

type GetStakingDelegatorsDelegatorAddrTxsPayloadTxsTxValueFee {
  Amount: [GetStakingDelegatorsDelegatorAddrTxsPayloadTxsTxValueFeeAmount]
  Gas: String
}

type GetStakingDelegatorsDelegatorAddrTxsPayloadTxsTxValueFeeAmount {
  Amount: String
  Denom: String
}

type GetStakingDelegatorsDelegatorAddrTxsPayloadTxsTxValueMsg {
  Type: String
  Value: String
}

type GetStakingDelegatorsDelegatorAddrTxsPayloadTxsTxValueSignatures {
  AccountNumber: String
  PubKey: GetStakingDelegatorsDelegatorAddrTxsPayloadTxsTxValueSignaturesPubKey
  Sequence: String
  Signature: String
}

type GetStakingDelegatorsDelegatorAddrTxsPayloadTxsTxValueSignaturesPubKey {
  Type: String
  Value: String
}

type GetStakingDelegatorsDelegatorAddrUnbondingDelegationsPayload {
  Height: String
  Result: [GetStakingDelegatorsDelegatorAddrUnbondingDelegationsPayloadResult]
}

type GetStakingDelegatorsDelegatorAddrUnbondingDelegationsPayloadResult {
  DelegatorAddress: String
  Entries: [GetStakingDelegatorsDelegatorAddrUnbondingDelegationsPayloadResultEntries]
  ValidatorAddress: String
}

type GetStakingDelegatorsDelegatorAddrUnbondingDelegationsPayloadResultEntries {
  Balance: String
  CompletionTime: String
  CreationHeight: String
  InitialBalance: String
}

type GetStakingDelegatorsDelegatorAddrUnbondingDelegationsValidatorAddrPayload {
  Height: String
  Result: GetStakingDelegatorsDelegatorAddrUnbondingDelegationsValidatorAddrPayloadResult
}

type GetStakingDelegatorsDelegatorAddrUnbondingDelegationsValidatorAddrPayloadResult {
  DelegatorAddress: String
  Entries: [GetStakingDelegatorsDelegatorAddrUnbondingDelegationsValidatorAddrPayloadResultEntries]
  ValidatorAddress: String
}

type GetStakingDelegatorsDelegatorAddrUnbondingDelegationsValidatorAddrPayloadResultEntries {
  Balance: String
  CompletionTime: String
  CreationHeight: String
  InitialBalance: String
}

type GetStakingDelegatorsDelegatorAddrValidatorsPayload {
  Height: String
  Result: [GetStakingDelegatorsDelegatorAddrValidatorsPayloadResult]
}

type GetStakingDelegatorsDelegatorAddrValidatorsPayloadResult {
  BondHeight: String
  BondIntraTxCounter: Int
  Commission: GetStakingDelegatorsDelegatorAddrValidatorsPayloadResultCommission
  ConsensusPubkey: String
  DelegatorShares: String
  Description: GetStakingDelegatorsDelegatorAddrValidatorsPayloadResultDescription
  Jailed: Boolean
  OperatorAddress: String
  Status: Int
  Tokens: String
  UnbondingHeight: String
  UnbondingTime: String
}

type GetStakingDelegatorsDelegatorAddrValidatorsPayloadResultCommission {
  MaxChangeRate: String
  MaxRate: String
  Rate: String
  UpdateTime: String
}

type GetStakingDelegatorsDelegatorAddrValidatorsPayloadResultDescription {
  Details: String
  Identity: String
  Moniker: String
  Website: String
}

type GetStakingDelegatorsDelegatorAddrValidatorsValidatorAddrPayload {
  Height: String
  Result: GetStakingDelegatorsDelegatorAddrValidatorsValidatorAddrPayloadResult
}

type GetStakingDelegatorsDelegatorAddrValidatorsValidatorAddrPayloadResult {
  BondHeight: String
  BondIntraTxCounter: Int
  Commission: GetStakingDelegatorsDelegatorAddrValidatorsValidatorAddrPayloadResultCommission
  ConsensusPubkey: String
  DelegatorShares: String
  Description: GetStakingDelegatorsDelegatorAddrValidatorsValidatorAddrPayloadResultDescription
  Jailed: Boolean
  OperatorAddress: String
  Status: Int
  Tokens: String
  UnbondingHeight: String
  UnbondingTime: String
}

type GetStakingDelegatorsDelegatorAddrValidatorsValidatorAddrPayloadResultCommission {
  MaxChangeRate: String
  MaxRate: String
  Rate: String
  UpdateTime: String
}

type GetStakingDelegatorsDelegatorAddrValidatorsValidatorAddrPayloadResultDescription {
  Details: String
  Identity: String
  Moniker: String
  Website: String
}

type GetStakingParametersPayload {
  Height: String
  Result: GetStakingParametersPayloadResult
}

type GetStakingParametersPayloadResult {
  BondDenom: String
  MaxEntries: Int
  MaxValidators: Int
  UnbondingTime: String
}

type GetStakingPoolPayload {
  Height: String
  Result: GetStakingPoolPayloadResult
}

type GetStakingPoolPayloadResult {
  BondedTokens: String
  NotBondedTokens: String
}

type GetStakingRedelegationsPayload {
  Height: String
  Result: [GetStakingRedelegationsPayloadResult]
}

type GetStakingRedelegationsPayloadResult {
  DelegatorAddress: String
  Entries: [GetStakingRedelegationsPayloadResultEntries]
  ValidatorDstAddress: String
  ValidatorSrcAddress: String
}

type GetStakingRedelegationsPayloadResultEntries {
  Balance: String
  CompletionTime: String
  CreationHeight: Int
  InitialBalance: String
  SharesDst: String
}

type GetStakingValidatorsPayload {
  Height: String
  Result: [GetStakingValidatorsPayloadResult]
}

type GetStakingValidatorsPayloadResult {
  BondHeight: String
  BondIntraTxCounter: Int
  Commission: GetStakingValidatorsPayloadResultCommission
  ConsensusPubkey: String
  DelegatorShares: String
  Description: GetStakingValidatorsPayloadResultDescription
  Jailed: Boolean
  OperatorAddress: String
  Status: Int
  Tokens: String
  UnbondingHeight: String
  UnbondingTime: String
}

type GetStakingValidatorsPayloadResultCommission {
  MaxChangeRate: String
  MaxRate: String
  Rate: String
  UpdateTime: String
}

type GetStakingValidatorsPayloadResultDescription {
  Details: String
  Identity: String
  Moniker: String
  Website: String
}

type GetStakingValidatorsValidatorAddrDelegationsPayload {
  Height: String
  Result: [GetStakingValidatorsValidatorAddrDelegationsPayloadResult]
}

type GetStakingValidatorsValidatorAddrDelegationsPayloadResult {
  Balance: GetStakingValidatorsValidatorAddrDelegationsPayloadResultBalance
  DelegatorAddress: String
  Shares: String
  ValidatorAddress: String
}

type GetStakingValidatorsValidatorAddrDelegationsPayloadResultBalance {
  Amount: String
  Denom: String
}

type GetStakingValidatorsValidatorAddrPayload {
  Height: String
  Result: GetStakingValidatorsValidatorAddrPayloadResult
}

type GetStakingValidatorsValidatorAddrPayloadResult {
  BondHeight: String
  BondIntraTxCounter: Int
  Commission: GetStakingValidatorsValidatorAddrPayloadResultCommission
  ConsensusPubkey: String
  DelegatorShares: String
  Description: GetStakingValidatorsValidatorAddrPayloadResultDescription
  Jailed: Boolean
  OperatorAddress: String
  Status: Int
  Tokens: String
  UnbondingHeight: String
  UnbondingTime: String
}

type GetStakingValidatorsValidatorAddrPayloadResultCommission {
  MaxChangeRate: String
  MaxRate: String
  Rate: String
  UpdateTime: String
}

type GetStakingValidatorsValidatorAddrPayloadResultDescription {
  Details: String
  Identity: String
  Moniker: String
  Website: String
}

type GetStakingValidatorsValidatorAddrUnbondingDelegationsPayload {
  Height: String
  Result: [GetStakingValidatorsValidatorAddrUnbondingDelegationsPayloadResult]
}

type GetStakingValidatorsValidatorAddrUnbondingDelegationsPayloadResult {
  DelegatorAddress: String
  Entries: [GetStakingValidatorsValidatorAddrUnbondingDelegationsPayloadResultEntries]
  ValidatorAddress: String
}

type GetStakingValidatorsValidatorAddrUnbondingDelegationsPayloadResultEntries {
  Balance: String
  CompletionTime: String
  CreationHeight: String
  InitialBalance: String
}

type GetSupplyTotalDenominationPayload {
  Height: String
  Result: String
}

type GetSupplyTotalPayload {
  Height: String
  Result: [GetSupplyTotalPayloadResult]
}

type GetSupplyTotalPayloadResult {
  Amount: String
  Denom: String
}

type GetSyncingPayload {
  Syncing: Boolean
}

type GetTreasuryIndicatorsPayload {
  Height: String
  Result: GetTreasuryIndicatorsPayloadResult
}

type GetTreasuryIndicatorsPayloadResult {
  TrlMonth: String
  TrlYear: String
}

type GetTreasuryParametersPayload {
  Height: String
  Result: GetTreasuryParametersPayloadResult
}

type GetTreasuryParametersPayloadResult {
  BudgetShare: Float
  MiningIncrement: String
  OracleShare: Float
  RewardPolicy: GetTreasuryParametersPayloadResultRewardPolicy
  SeigniorageBurdenTarget: String
  TaxPolicy: GetTreasuryParametersPayloadResultTaxPolicy
  WindowLong: String
  WindowProbation: String
  WindowShort: String
}

type GetTreasuryParametersPayloadResultRewardPolicy {
  Cap: GetTreasuryParametersPayloadResultRewardPolicyCap
  ChangeMax: String
  RateMax: String
  RateMin: String
}

type GetTreasuryParametersPayloadResultRewardPolicyCap {
  Amount: String
  Denom: String
}

type GetTreasuryParametersPayloadResultTaxPolicy {
  Cap: GetTreasuryParametersPayloadResultTaxPolicyCap
  ChangeMax: String
  RateMax: String
  RateMin: String
}

type GetTreasuryParametersPayloadResultTaxPolicyCap {
  Amount: String
  Denom: String
}

type GetTreasuryRewardWeightPayload {
  Height: String
  Result: String
}

type GetTreasurySeigniorageProceedsPayload {
  Height: String
  Result: String
}

type GetTreasuryTaxCapDenomPayload {
  Height: String
  Result: String
}

type GetTreasuryTaxProceedsPayload {
  Height: String
  Result: [GetTreasuryTaxProceedsPayloadResult]
}

type GetTreasuryTaxProceedsPayloadResult {
  Amount: String
  Denom: String
}

type GetTreasuryTaxRatePayload {
  Height: String
  Result: String
}

type GetTxsHashPayload {
  Events: [GetTxsHashPayloadEvents]
  GasUsed: String
  GasWanted: String
  Height: String
  Logs: [GetTxsHashPayloadLogs]
  RawLogs: String
  Timestamp: String
  Tx: GetTxsHashPayloadTx
  Txhash: String
}

type GetTxsHashPayloadEvents {
  Attributes: [GetTxsHashPayloadEventsAttributes]
  Type: String
}

type GetTxsHashPayloadEventsAttributes {
  Key: String
  Value: String
}

type GetTxsHashPayloadLogs {
  Events: [GetTxsHashPayloadLogsEvents]
  Log: String
  MsgIndex: Float
  Success: Boolean
}

type GetTxsHashPayloadLogsEvents {
  Attributes: [GetTxsHashPayloadLogsEventsAttributes]
  Type: String
}

type GetTxsHashPayloadLogsEventsAttributes {
  Key: String
  Value: String
}

type GetTxsHashPayloadTx {
  Type: String
  Value: GetTxsHashPayloadTxValue
}

type GetTxsHashPayloadTxValue {
  Fee: GetTxsHashPayloadTxValueFee
  Memo: String
  Msg: [GetTxsHashPayloadTxValueMsg]
  Signatures: [GetTxsHashPayloadTxValueSignatures]
}

type GetTxsHashPayloadTxValueFee {
  Amount: [GetTxsHashPayloadTxValueFeeAmount]
  Gas: String
}

type GetTxsHashPayloadTxValueFeeAmount {
  Amount: String
  Denom: String
}

type GetTxsHashPayloadTxValueMsg {
  Type: String
  Value: String
}

type GetTxsHashPayloadTxValueSignatures {
  AccountNumber: String
  PubKey: GetTxsHashPayloadTxValueSignaturesPubKey
  Sequence: String
  Signature: String
}

type GetTxsHashPayloadTxValueSignaturesPubKey {
  Type: String
  Value: String
}

type GetTxsPayload {
  Count: String
  Limit: String
  PageNumber: String
  PageTotal: String
  TotalCount: String
  Txs: [GetTxsPayloadTxs]
}

type GetTxsPayloadTxs {
  Events: [GetTxsPayloadTxsEvents]
  GasUsed: String
  GasWanted: String
  Height: String
  Logs: [GetTxsPayloadTxsLogs]
  RawLogs: String
  Timestamp: String
  Tx: GetTxsPayloadTxsTx
  Txhash: String
}

type GetTxsPayloadTxsEvents {
  Attributes: [GetTxsPayloadTxsEventsAttributes]
  Type: String
}

type GetTxsPayloadTxsEventsAttributes {
  Key: String
  Value: String
}

type GetTxsPayloadTxsLogs {
  Events: [GetTxsPayloadTxsLogsEvents]
  Log: String
  MsgIndex: Float
  Success: Boolean
}

type GetTxsPayloadTxsLogsEvents {
  Attributes: [GetTxsPayloadTxsLogsEventsAttributes]
  Type: String
}

type GetTxsPayloadTxsLogsEventsAttributes {
  Key: String
  Value: String
}

type GetTxsPayloadTxsTx {
  Type: String
  Value: GetTxsPayloadTxsTxValue
}

type GetTxsPayloadTxsTxValue {
  Fee: GetTxsPayloadTxsTxValueFee
  Memo: String
  Msg: [GetTxsPayloadTxsTxValueMsg]
  Signatures: [GetTxsPayloadTxsTxValueSignatures]
}

type GetTxsPayloadTxsTxValueFee {
  Amount: [GetTxsPayloadTxsTxValueFeeAmount]
  Gas: String
}

type GetTxsPayloadTxsTxValueFeeAmount {
  Amount: String
  Denom: String
}

type GetTxsPayloadTxsTxValueMsg {
  Type: String
  Value: String
}

type GetTxsPayloadTxsTxValueSignatures {
  AccountNumber: String
  PubKey: GetTxsPayloadTxsTxValueSignaturesPubKey
  Sequence: String
  Signature: String
}

type GetTxsPayloadTxsTxValueSignaturesPubKey {
  Type: String
  Value: String
}

type GetValidatorsetsHeightPayload {
  Height: String
  Result: GetValidatorsetsHeightPayloadResult
}

type GetValidatorsetsHeightPayloadResult {
  BlockHeight: String
  Validators: [GetValidatorsetsHeightPayloadResultValidators]
}

type GetValidatorsetsHeightPayloadResultValidators {
  Address: String
  ProposerPriority: String
  PubKey: String
  VotingPower: String
}

type GetValidatorsetsLatestPayload {
  Height: String
  Result: GetValidatorsetsLatestPayloadResult
}

type GetValidatorsetsLatestPayloadResult {
  BlockHeight: String
  Validators: [GetValidatorsetsLatestPayloadResultValidators]
}

type GetValidatorsetsLatestPayloadResultValidators {
  Address: String
  ProposerPriority: String
  PubKey: String
  VotingPower: String
}

type GetWasmCodesCodeIDPayload {
  Height: String
  Result: GetWasmCodesCodeIDPayloadResult
}

type GetWasmCodesCodeIDPayloadResult {
  CodeHash: String
  CodeID: String
  Creator: String
}

type GetWasmContractsContractAddressPayload {
  Height: String
  Result: String
}

type GetWasmContractsContractAddressStorePayload {
  Height: String
  Result: String
}

type GetWasmContractsContractAddressStoreRawPayload {
  Height: String
  Result: GetWasmContractsContractAddressStoreRawPayloadResult
}

type GetWasmContractsContractAddressStoreRawPayloadResult {
  Key: String
  Value: String
}

type GetWasmParametersPayload {
  Height: String
  Result: GetWasmParametersPayloadResult
}

type GetWasmParametersPayloadResult {
  GasMultiplier: String
  MaxContractGas: String
  MaxContractMsgSize: String
  MaxContractSize: String
}

type InterestEarnedUserRecords {
  Address: String
  AtAction: String
  CurrentAnchorBalance: String
  CurrentDeposit: String
  CurrentExchangeRate: String
  Height: Int
  StableDenom: String
  Timestamp: Int
  TotalDeposit: String
  TotalWithdraw: String
}

enum Order {
  """Ascending order"""
  ASC

  """Ascending order"""
  DESC
}

type RootQuery {
  AnchorBorrowerDistributionAPYs(
    """index Timestamp with type uint64"""
    Timestamp: Int

    """Ranged - index Timestamp with type uint64"""
    Timestamp_range: [Int]

    """index Height with type uint64"""
    Height: Int

    """Ranged - index Height with type uint64"""
    Height_range: [Int]

    """Limit"""
    Limit: Int

    """Sort order"""
    Order: Order
  ): [AnchorBorrowerDistributionAPYs]
  AnchorDepositRateHistory(
    """Sort order"""
    Order: Order

    """index Height with type uint64"""
    Height: Int

    """Ranged - index Height with type uint64"""
    Height_range: [Int]

    """index Timestamp with type uint64"""
    Timestamp: Int

    """Ranged - index Timestamp with type uint64"""
    Timestamp_range: [Int]

    """index Updated with type bool"""
    Updated: Boolean

    """Ranged - index Updated with type bool"""
    Updated_range: [Boolean]

    """Limit"""
    Limit: Int
  ): [AnchorDepositRateHistory]
  AnchorExchangeRates(
    """index Timestamp with type uint64"""
    Timestamp: Int

    """Ranged - index Timestamp with type uint64"""
    Timestamp_range: [Int]

    """Ranged - index ATerraContract with type string"""
    ATerraContract_range: [String]

    """Sort order"""
    Order: Order

    """index StableDenom with type string"""
    StableDenom: String

    """Ranged - index ExchangeRate with type string"""
    ExchangeRate_range: [String]

    """Ranged - index Height with type uint64"""
    Height_range: [Int]

    """index ATerraContract with type string"""
    ATerraContract: String

    """Limit"""
    Limit: Int

    """Ranged - index StableDenom with type string"""
    StableDenom_range: [String]

    """index ExchangeRate with type string"""
    ExchangeRate: String

    """index Height with type uint64"""
    Height: Int
  ): [AnchorExchangeRates]
  AnchorGovRewardRecords(
    """index Height with type uint64"""
    Height: Int

    """Ranged - index Height with type uint64"""
    Height_range: [Int]

    """index Timestamp with type uint64"""
    Timestamp: Int

    """Ranged - index Timestamp with type uint64"""
    Timestamp_range: [Int]

    """Limit"""
    Limit: Int

    """Sort order"""
    Order: Order
  ): [AnchorGovRewardRecords]
  AnchorLPRewards(
    """Sort order"""
    Order: Order

    """index Height with type uint64"""
    Height: Int

    """Ranged - index Height with type uint64"""
    Height_range: [Int]

    """index Timestamp with type uint64"""
    Timestamp: Int

    """Ranged - index Timestamp with type uint64"""
    Timestamp_range: [Int]

    """Limit"""
    Limit: Int
  ): [AnchorLPRewards]

  """(proxy) """
  AuthAccountsAddress(Address: String): GetAuthAccountsAddressPayload

  """(proxy) """
  BankBalancesAddress(Address: String): GetBankBalancesAddressPayload

  """(proxy) """
  BlockState: BlockState

  """(proxy) """
  BlockStates(
    """Limit"""
    Limit: Int

    """Sort order"""
    Order: Order
  ): [BlockState]

  """(proxy) """
  Blocks(
    """Sort order"""
    Order: Order

    """index TimestampUTC with type uint64"""
    TimestampUTC: Int

    """index Memo with type string"""
    Memo: String

    """index TxHash with type string"""
    TxHash: String

    """index Success with type bool"""
    Success: Boolean

    """Ranged - index Success with type bool"""
    Success_range: [Boolean]

    """Ranged - index TimestampUTC with type uint64"""
    TimestampUTC_range: [Int]

    """Ranged - index TxHash with type string"""
    TxHash_range: [String]

    """Ranged - index Memo with type string"""
    Memo_range: [String]

    """Height is the absolute block height when indexed"""
    Height: Int

    """Ranged - Height is the absolute block height when indexed"""
    Height_range: [Int]

    """Limit"""
    Limit: Int
  ): [Blocks]

  """(proxy) """
  BlocksHeight(Height: Float): GetBlocksHeightPayload

  """(proxy) """
  BlocksLatest: GetBlocksLatestPayload

  """(proxy) """
  CW20Transfers(
    """Ranged - index Amount with type string"""
    Amount_range: [String]

    """index Sender with type string"""
    Sender: String

    """Ranged - Height is the absolute block height when indexed"""
    Height_range: [Int]

    """Ranged - index Recipient with type string"""
    Recipient_range: [String]

    """Sort order"""
    Order: Order

    """index TransferType with type string"""
    TransferType: String

    """index Amount with type string"""
    Amount: String

    """Ranged - index Sender with type string"""
    Sender_range: [String]

    """index Address with type string"""
    Address: String

    """Ranged - index TransferType with type string"""
    TransferType_range: [String]

    """Ranged - index Address with type string"""
    Address_range: [String]

    """Limit"""
    Limit: Int

    """index Recipient with type string"""
    Recipient: String

    """Height is the absolute block height when indexed"""
    Height: Int

    """index Contract with type string"""
    Contract: String

    """Ranged - index Contract with type string"""
    Contract_range: [String]
  ): [CW20Transfers]

  """(proxy) """
  DistributionCommunityPool: GetDistributionCommunityPoolPayload

  """(proxy) """
  DistributionDelegatorsDelegatorAddrRewards(DelegatorAddr: String): GetDistributionDelegatorsDelegatorAddrRewardsPayload

  """(proxy) """
  DistributionDelegatorsDelegatorAddrRewardsValidatorAddr(DelegatorAddr: String, ValidatorAddr: String): GetDistributionDelegatorsDelegatorAddrRewardsValidatorAddrPayload

  """(proxy) """
  DistributionDelegatorsDelegatorAddrWithdrawAddress(DelegatorAddr: String): GetDistributionDelegatorsDelegatorAddrWithdrawAddressPayload

  """(proxy) """
  DistributionParameters: GetDistributionParametersPayload

  """(proxy) """
  DistributionValidatorsValidatorAddr(ValidatorAddr: String): GetDistributionValidatorsValidatorAddrPayload

  """(proxy) """
  DistributionValidatorsValidatorAddrOutstandingRewards(ValidatorAddr: String): GetDistributionValidatorsValidatorAddrOutstandingRewardsPayload

  """(proxy) """
  DistributionValidatorsValidatorAddrRewards(ValidatorAddr: String): GetDistributionValidatorsValidatorAddrRewardsPayload

  """(proxy) """
  GovParametersDeposit: GetGovParametersDepositPayload

  """(proxy) """
  GovParametersTallying: GetGovParametersTallyingPayload

  """(proxy) """
  GovParametersVoting: GetGovParametersVotingPayload

  """(proxy) """
  GovProposals(Depositor: String, Status: String, Voter: String): GetGovProposalsPayload

  """(proxy) """
  GovProposalsProposalID(ProposalID: String): GetGovProposalsProposalIDPayload

  """(proxy) """
  GovProposalsProposalIDDeposits(ProposalID: String): GetGovProposalsProposalIDDepositsPayload

  """(proxy) """
  GovProposalsProposalIDDepositsDepositor(ProposalID: String, Depositor: String): GetGovProposalsProposalIDDepositsDepositorPayload

  """(proxy) """
  GovProposalsProposalIDProposer(ProposalID: String): GetGovProposalsProposalIDProposerPayload

  """(proxy) """
  GovProposalsProposalIDTally(ProposalID: String): GetGovProposalsProposalIDTallyPayload

  """(proxy) """
  GovProposalsProposalIDVotes(ProposalID: String): GetGovProposalsProposalIDVotesPayload

  """(proxy) """
  GovProposalsProposalIDVotesVoter(ProposalID: String, Voter: String): GetGovProposalsProposalIDVotesVoterPayload
  InterestEarnedUserRecords(
    """Ranged - index Timestamp with type uint64"""
    Timestamp_range: [Int]

    """Ranged - index Height with type uint64"""
    Height_range: [Int]

    """index Address with type string"""
    Address: String

    """Ranged - index Address with type string"""
    Address_range: [String]

    """index StableDenom with type string"""
    StableDenom: String

    """index Timestamp with type uint64"""
    Timestamp: Int

    """Ranged - index StableDenom with type string"""
    StableDenom_range: [String]

    """index Height with type uint64"""
    Height: Int

    """Limit"""
    Limit: Int

    """Sort order"""
    Order: Order
  ): [InterestEarnedUserRecords]

  """
  (proxy) Last known height in mantle. Height is updated only after committing
  all entities, therefore it is guaranteed to be in sync with other indexer results.
  """
  LastSyncedHeight: Int

  """(proxy) """
  MarketParameters: GetMarketParametersPayload

  """(proxy) """
  MarketSwap(AskDenom: String, OfferCoin: String): GetMarketSwapPayload

  """(proxy) """
  MarketTerraPoolDelta: GetMarketTerraPoolDeltaPayload

  """(proxy) """
  MintingAnnualProvisions: GetMintingAnnualProvisionsPayload

  """(proxy) """
  MintingInflation: GetMintingInflationPayload

  """(proxy) """
  MintingParameters: GetMintingParametersPayload

  """(proxy) """
  MsgauthGrantersGranterAddressGranteesGranteeAddressGrants(GranteeAddress: String, GranterAddress: String): [GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsPayload]

  """(proxy) """
  MsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgType(GranterAddress: String, MsgType: String, GranteeAddress: String): GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypePayload

  """(proxy) """
  NodeInfo: GetNodeInfoPayload

  """(proxy) """
  OracleDenomsActives: GetOracleDenomsActivesPayload

  """(proxy) """
  OracleDenomsDenomExchangeRate(Denom: String): GetOracleDenomsDenomExchangeRatePayload

  """(proxy) """
  OracleDenomsDenomPrevotes(Denom: String): GetOracleDenomsDenomPrevotesPayload

  """(proxy) """
  OracleDenomsDenomPrevotesValidator(Denom: String, Validator: String): GetOracleDenomsDenomPrevotesValidatorPayload

  """(proxy) """
  OracleDenomsDenomVotes(Denom: String): GetOracleDenomsDenomVotesPayload

  """(proxy) """
  OracleDenomsDenomVotesValidator(Denom: String, Validator: String): GetOracleDenomsDenomVotesValidatorPayload

  """(proxy) """
  OracleDenomsExchangeRates: GetOracleDenomsExchangeRatesPayload

  """(proxy) """
  OracleParameters: GetOracleParametersPayload

  """(proxy) """
  OracleVotersValidatorAggregatePrevote(Validator: String): GetOracleVotersValidatorAggregatePrevotePayload

  """(proxy) """
  OracleVotersValidatorAggregateVote(Validator: String): GetOracleVotersValidatorAggregateVotePayload

  """(proxy) """
  OracleVotersValidatorFeeder(Validator: String): GetOracleVotersValidatorFeederPayload

  """(proxy) """
  OracleVotersValidatorMiss(Validator: String): GetOracleVotersValidatorMissPayload

  """(proxy) """
  OracleVotersValidatorPrevotes(Validator: String): GetOracleVotersValidatorPrevotesPayload

  """(proxy) """
  OracleVotersValidatorVotes(Validator: String): GetOracleVotersValidatorVotesPayload

  """(proxy) """
  SlashingParameters: GetSlashingParametersPayload

  """(proxy) """
  SlashingSigningInfos(Page: Int, Limit: Int): GetSlashingSigningInfosPayload

  """(proxy) """
  SlashingValidatorsValidatorPubKeySigningInfo(ValidatorPubKey: String): GetSlashingValidatorsValidatorPubKeySigningInfoPayload

  """(proxy) """
  StakingDelegatorsDelegatorAddrDelegations(DelegatorAddr: String): GetStakingDelegatorsDelegatorAddrDelegationsPayload

  """(proxy) """
  StakingDelegatorsDelegatorAddrDelegationsValidatorAddr(ValidatorAddr: String, DelegatorAddr: String): GetStakingDelegatorsDelegatorAddrDelegationsValidatorAddrPayload

  """(proxy) """
  StakingDelegatorsDelegatorAddrTxs(DelegatorAddr: String): [GetStakingDelegatorsDelegatorAddrTxsPayload]

  """(proxy) """
  StakingDelegatorsDelegatorAddrUnbondingDelegations(DelegatorAddr: String): GetStakingDelegatorsDelegatorAddrUnbondingDelegationsPayload

  """(proxy) """
  StakingDelegatorsDelegatorAddrUnbondingDelegationsValidatorAddr(DelegatorAddr: String, ValidatorAddr: String): GetStakingDelegatorsDelegatorAddrUnbondingDelegationsValidatorAddrPayload

  """(proxy) """
  StakingDelegatorsDelegatorAddrValidators(DelegatorAddr: String): GetStakingDelegatorsDelegatorAddrValidatorsPayload

  """(proxy) """
  StakingDelegatorsDelegatorAddrValidatorsValidatorAddr(DelegatorAddr: String, ValidatorAddr: String): GetStakingDelegatorsDelegatorAddrValidatorsValidatorAddrPayload

  """(proxy) """
  StakingParameters: GetStakingParametersPayload

  """(proxy) """
  StakingPool: GetStakingPoolPayload

  """(proxy) """
  StakingRedelegations(Delegator: String, ValidatorFrom: String, ValidatorTo: String): GetStakingRedelegationsPayload

  """(proxy) """
  StakingValidators(Limit: Int, Page: Int, Status: String): GetStakingValidatorsPayload

  """(proxy) """
  StakingValidatorsValidatorAddr(ValidatorAddr: String): GetStakingValidatorsValidatorAddrPayload

  """(proxy) """
  StakingValidatorsValidatorAddrDelegations(ValidatorAddr: String): GetStakingValidatorsValidatorAddrDelegationsPayload

  """(proxy) """
  StakingValidatorsValidatorAddrUnbondingDelegations(ValidatorAddr: String): GetStakingValidatorsValidatorAddrUnbondingDelegationsPayload

  """(proxy) """
  SupplyTotal: GetSupplyTotalPayload

  """(proxy) """
  SupplyTotalDenomination(Denomination: String): GetSupplyTotalDenominationPayload

  """(proxy) """
  Syncing: GetSyncingPayload
  TransactionHistory(
    """index InDenom with type string"""
    InDenom: String

    """index TxHash with type string"""
    TxHash: String

    """Ranged - index TxHash with type string"""
    TxHash_range: [String]

    """index OutDenom with type string"""
    OutDenom: String

    """index Height with type uint64"""
    Height: Int

    """Limit"""
    Limit: Int

    """Ranged - index Contract with type string"""
    Contract_range: [String]

    """index OutAmount with type string"""
    OutAmount: String

    """Ranged - index OutAmount with type string"""
    OutAmount_range: [String]

    """Ranged - index InAmount with type string"""
    InAmount_range: [String]

    """Ranged - index Timestamp with type uint64"""
    Timestamp_range: [Int]

    """Ranged - index Height with type uint64"""
    Height_range: [Int]

    """index Address with type string"""
    Address: String

    """Ranged - index Address with type string"""
    Address_range: [String]

    """Ranged - index InDenom with type string"""
    InDenom_range: [String]

    """index Contract with type string"""
    Contract: String

    """index TransactionType with type string"""
    TransactionType: String

    """Ranged - index TransactionType with type string"""
    TransactionType_range: [String]

    """index Timestamp with type uint64"""
    Timestamp: Int

    """Sort order"""
    Order: Order

    """index InAmount with type string"""
    InAmount: String

    """Ranged - index OutDenom with type string"""
    OutDenom_range: [String]
  ): [TransactionHistory]

  """(proxy) """
  TreasuryIndicators: GetTreasuryIndicatorsPayload

  """(proxy) """
  TreasuryParameters: GetTreasuryParametersPayload

  """(proxy) """
  TreasuryRewardWeight: GetTreasuryRewardWeightPayload

  """(proxy) """
  TreasurySeigniorageProceeds: GetTreasurySeigniorageProceedsPayload

  """(proxy) """
  TreasuryTaxCapDenom(Denom: String): GetTreasuryTaxCapDenomPayload

  """(proxy) """
  TreasuryTaxProceeds: GetTreasuryTaxProceedsPayload

  """(proxy) """
  TreasuryTaxRate: GetTreasuryTaxRatePayload

  """(proxy) """
  TxInfos(
    """Ranged - Height is the absolute block height when indexed"""
    Height_range: [Int]

    """Ranged - index TimestampUTC with type uint64"""
    TimestampUTC_range: [Int]

    """index Success with type bool"""
    Success: Boolean

    """Sort order"""
    Order: Order

    """index TimestampUTC with type uint64"""
    TimestampUTC: Int

    """Ranged - index TxHash with type string"""
    TxHash_range: [String]

    """Ranged - index Success with type bool"""
    Success_range: [Boolean]

    """Height is the absolute block height when indexed"""
    Height: Int

    """index TxHash with type string"""
    TxHash: String

    """Limit"""
    Limit: Int

    """index Memo with type string"""
    Memo: String

    """Ranged - index Memo with type string"""
    Memo_range: [String]
  ): [TxInfos]

  """(proxy) """
  Txs(Page: Int, TxHeight: Int, Limit: Int, MessageAction: String, MessageSender: String): GetTxsPayload

  """(proxy) """
  TxsHash(Hash: String): GetTxsHashPayload

  """(proxy) """
  ValidatorsetsHeight(Height: Float): GetValidatorsetsHeightPayload

  """(proxy) """
  ValidatorsetsLatest: GetValidatorsetsLatestPayload

  """(proxy) """
  WasmCodesCodeID(CodeID: Float): GetWasmCodesCodeIDPayload

  """(proxy) """
  WasmContractsContractAddress(ContractAddress: String): GetWasmContractsContractAddressPayload

  """(proxy) """
  WasmContractsContractAddressStore(ContractAddress: String, QueryMsg: String): GetWasmContractsContractAddressStorePayload

  """(proxy) """
  WasmContractsContractAddressStoreRaw(Subkey: String, ContractAddress: String, Key: String): GetWasmContractsContractAddressStoreRawPayload

  """(proxy) """
  WasmParameters: GetWasmParametersPayload
}

"""golang's time.Time"""
scalar Time

type TransactionHistory {
  Address: String
  Contract: String
  Height: Int
  InAmount: String
  InDenom: String
  OutAmount: String
  OutDenom: String
  Timestamp: Int
  TransactionType: String
  TxHash: String
}

type TxInfos {
  Code: Int
  Events: [TxInfosEvents]
  GasUsed: Int
  GasWanted: Int
  Height: Int
  Logs: [TxInfosLogs]
  RawLog: String
  Success: Boolean
  Timestamp: String
  TimestampUTC: Int
  Tx: TxInfosTx
  TxHash: String
}

type TxInfosEvents {
  Attributes: [TxInfosEventsAttributes]
  Type: String
}

type TxInfosEventsAttributes {
  Key: String
  Value: String
}

type TxInfosLogs {
  Events: [TxInfosLogsEvents]
  Log: String
  MsgIndex: Int
}

type TxInfosLogsEvents {
  Attributes: [TxInfosLogsEventsAttributes]
  Type: String
}

type TxInfosLogsEventsAttributes {
  Key: String
  Value: String
}

type TxInfosTx {
  Fee: TxInfosTxFee
  Memo: String
  Msg: [TxInfosTxMsg]
  Signatures: [TxInfosTxSignatures]
}

type TxInfosTxFee {
  Amount: [TxInfosTxFeeAmount]
  Gas: Int
}

type TxInfosTxFeeAmount {
  Amount: String
  Denom: String
}

type TxInfosTxMsg {
  Type: String
  Value: String
}

type TxInfosTxSignatures {
  PubKey: TxInfosTxSignaturesPubKey
  Signature: String
}

type TxInfosTxSignaturesPubKey {
  Type: String
  Value: String
}
